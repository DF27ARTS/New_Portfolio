import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import { useCallback, useEffect, useRef, useState } from "react";
// import Header from "@/components/";
import Navbar from "@/components/Navbar";
import Header from "@/components/Header";
import InformationComponent from "@/components/InformationComponent";
import AboutSection from "@/components/AboutSection";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const circleOneRef = useRef<HTMLDivElement | null>(null);
  const circleTwoRef = useRef<HTMLDivElement | null>(null);

  const [currentComponent, setCurrentComponent] =
    useState<string>("ProjectsComponent");

  const main = useCallback((node: HTMLElement) => {
    if (node) {
      const circleOne = circleOneRef.current;
      const circleTwo = circleTwoRef.current;

      window.addEventListener("pointermove", (e) => {
        if (circleOne && circleTwo) {
          circleOne.style.top = `${e.clientY}px`;
          circleOne.style.left = `${e.clientX}px`;

          circleTwo.style.top = `${e.clientY}px`;
          circleTwo.style.left = `${e.clientX}px`;
        }
      });
    }
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main ref={main} className="main-portfolio-container">
        <Header />
        {/* <AboutSection /> */}
        <Navbar setCurrentComponent={setCurrentComponent} />
        <InformationComponent currentComponent={currentComponent} />

        {/* <div ref={circleOneRef} className="mouse-pointer-one"></div>
        <div ref={circleTwoRef} className="mouse-pointer-two"></div> */}
      </main>
    </>
  );
}

// export async function getServerSideProps() {
//   const response = await fetch("http://localhost:3000/api/hello", {
//     method: "GET",
//     headers: {
//       "Content-type": "application/json",
//     },
//   });
//   if (!response.ok) throw new Error("Error");

//   const data: any = await response.json();
//   return {
//     props: {
//       data: data,
//     },
//   };
// }
