
@use "variables" as *;

.projects-container {

  --card-hover-transition: 350ms;

  display: grid; 
  grid-template-columns: repeat(2, 1fr);
  grid-auto-rows: 20rem;
  row-gap: 2.5rem;
  column-gap: 3.5rem;
  padding: 2rem 0;

  transform: perspective(1000px);
  transform-style: preserve-3d;

  .single-card {
    transform-style: preserve-3d;

    background: transparent;
    border-radius: 1rem;

    opacity: 0;
    transition: 
      opacity var(--card-hover-transition) ease-out var(--card-hover-transition),
      transform var(--card-hover-transition) ease-out var(--card-hover-transition);
      
    &:nth-child(odd) {
      transform: 
        rotateY(45deg)
        translateZ(-100rem);

      transition: 
        opacity var(--card-hover-transition) ease-out var(--card-hover-transition),
        transform var(--card-hover-transition) ease-out var(--card-hover-transition);
    }

    &:nth-child(even) {
      transform: 
        rotateY(-45deg)
        translateZ(-100rem);
        
      transition: 
          opacity var(--card-hover-transition) ease-out calc(var(--card-hover-transition) * 1.5),
          transform var(--card-hover-transition) ease-out calc(var(--card-hover-transition) * 1.5);
    }

    &.isIntersecting {
      opacity: 1;
      transform: 
        rotateY(0)
        translateZ(0) !important;
    }


    position: relative;

    .single-card-container {
      height: 100%;
      width: 100%;
      position: relative;
      border-radius: .5rem;

      overflow: hidden;
      cursor: pointer;

      &::before {
        content: "";
        position: absolute;
        inset: 0;
        margin: auto;
        background-image: linear-gradient( transparent, hsla(0, 0%, 0%, 0.999));
        z-index: 1;
      }
      
      &:hover::before {
        background-image: linear-gradient( hsla(0, 0%, 0%, 0.299), hsla(0, 0%, 0%, 0.999));
      }

      &:hover .single-card-img{
        transform: scale(1.9);
        filter: grayscale(.5);
      }
  
      .single-card-img {
        height: 100%;
        width: 100%;
        object-fit: cover;
        
        position: absolute;
        inset: 0;

        transform: scale(1.45);
        filter: grayscale(0);
        transition: 
          filter var(--card-hover-transition) ease-out,
          transform var(--card-hover-transition) ease-out;
      }

      .single-card-inf-container {
        position: absolute;
        height: 100%;
        width: 100%;

        background: transparent;
        inset: 0;
        transform: perspective(500px);
        transform-style: preserve-3d;
        
        z-index: 2;

        .single-card-title {
          transform-style: preserve-3d;

          position: absolute;
          inset: auto 0 2rem 0;
          margin: auto;
          z-index: 5;
          width: fit-content;
    
          font-family: var(--font-family-name);
          letter-spacing: .2rem;

          transition: 
            opacity var(--card-hover-transition) ease-out,
            transform var(--card-hover-transition) ease-out;
        }

        .single-card-description {

          position: absolute;
          inset: 0;
          display: flex;
          flex-direction: column;
          gap: 1rem;
          font-family: var(--font-family-title);

          padding: 2rem;
          justify-content: center;
          align-items: center;
          font-size: 1.1rem;
          

          opacity: 0;
          transform: translateZ(-20rem);
          transition: 
            opacity var(--card-hover-transition) ease-out,
            transform var(--card-hover-transition) ease-out;

          .single-paragraph {
            line-height: 1.7;
            word-spacing: .3rem;
          }
        }
      }

      &:hover .single-card-title {
        opacity: 0;
        transform: translateZ(20rem);
      }

      &:hover .single-card-description {
        opacity: 1;
        transform: translateZ(0);
      }
    }
  }
}